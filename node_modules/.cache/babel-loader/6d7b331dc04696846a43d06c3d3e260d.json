{"ast":null,"code":"import _toConsumableArray from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tingyuan.lu/chatkit/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tingyuan.lu/chatkit/src/App.js\";\nimport React from 'react';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from './components/SendMessageForm';\nimport RoomList from './components/RoomList';\nimport NewRoomForm from './components/NewRoomForm';\nimport { tokenUrl, instanceLocator } from './config';\nimport \"./style.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      roomId: null,\n      messages: [],\n      joinableRooms: [],\n      joinedRooms: []\n    };\n    _this.sendMessage = _this.sendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.subscribeToRoom = _this.subscribeToRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRooms = _this.getRooms.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createRoom = _this.createRoom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatManager = new ChatManager({\n        instanceLocator: instanceLocator,\n        userId: 'Karen',\n        tokenProvider: new TokenProvider({\n          url: tokenUrl\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        _this2.currentUser = currentUser;\n\n        _this2.getRooms();\n      }).catch(function (err) {\n        return console.log('error on connecting: ', err);\n      });\n    }\n  }, {\n    key: \"getRooms\",\n    value: function getRooms() {\n      var _this3 = this;\n\n      this.currentUser.getJoinableRooms().then(function (joinableRooms) {\n        _this3.setState({\n          joinableRooms: joinableRooms,\n          joinedRooms: _this3.currentUser.rooms\n        });\n      }).catch(function (err) {\n        return console.log('error on joinableRooms: ', err);\n      });\n    }\n  }, {\n    key: \"subscribeToRoom\",\n    value: function subscribeToRoom(roomId) {\n      var _this4 = this;\n\n      this.setState({\n        messages: []\n      });\n      this.currentUser.subscribeToRoomMultipart({\n        roomId: roomId,\n        hooks: {\n          onMessage: function onMessage(message) {\n            _this4.setState({\n              messages: [].concat(_toConsumableArray(_this4.state.messages), [message])\n            });\n          }\n        }\n      }).then(function (room) {\n        _this4.setState({\n          roomId: room.id\n        });\n\n        _this4.getRooms();\n      }).catch(function (err) {\n        return console.log('error on subscribing to room: ', err);\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      this.currentUser.sendMessage({\n        text: text,\n        roomId: this.state.roomId\n      }).then(function (result) {\n        return console.log(result);\n      });\n    }\n  }, {\n    key: \"createRoom\",\n    value: function createRoom(name) {\n      var _this5 = this;\n\n      this.currentUser.createRoom({\n        name: name\n      }).then(function (room) {\n        return _this5.subscribeToRoom(room.id);\n      }).catch(function (err) {\n        return console.log('error with createRoom: ', err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state)\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(RoomList, {\n        subscribeToRoom: this.subscribeToRoom,\n        rooms: [].concat(_toConsumableArray(this.state.joinableRooms), _toConsumableArray(this.state.joinedRooms)),\n        roomId: this.state.roomId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        disabled: !this.state.roomId,\n        sendMessage: this.sendMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        createRoom: this.createRoom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tingyuan.lu/chatkit/src/App.js"],"names":["React","ChatManager","TokenProvider","MessageList","SendMessageForm","RoomList","NewRoomForm","tokenUrl","instanceLocator","App","state","roomId","messages","joinableRooms","joinedRooms","sendMessage","bind","subscribeToRoom","getRooms","createRoom","chatManager","userId","tokenProvider","url","connect","then","currentUser","catch","err","console","log","getJoinableRooms","setState","rooms","subscribeToRoomMultipart","hooks","onMessage","message","room","id","text","result","name","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\n\nimport { tokenUrl, instanceLocator } from './config'\n\nimport \"./style.css\";\n\nclass App extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: []\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n    }\n\n    componentDidMount() {\n        const chatManager = new ChatManager({\n            instanceLocator,\n            userId: 'Karen',\n            tokenProvider: new TokenProvider({\n                url: tokenUrl\n            })\n        })\n\n        chatManager.connect()\n        .then(currentUser => {\n            this.currentUser = currentUser\n            this.getRooms()\n        })\n        .catch(err => console.log('error on connecting: ', err))\n    }\n\n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n\n    subscribeToRoom(roomId) {\n        this.setState({ messages: [] })\n        this.currentUser.subscribeToRoomMultipart({\n            roomId: roomId,\n            hooks: {\n                onMessage: message => {\n\n                    this.setState({\n                        messages: [...this.state.messages, message]\n                    })\n                }\n            }\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n\n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        }).then(result => console.log(result))\n    }\n\n    createRoom(name) {\n        this.currentUser.createRoom({\n            name\n        })\n        .then(room => this.subscribeToRoom(room.id))\n        .catch(err => console.log('error with createRoom: ', err))\n    }\n\n    render() {\n        // console.log(this.state)\n        return (\n            <div className=\"app\">\n                <RoomList\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]}\n                    roomId={this.state.roomId} />\n                <MessageList\n                    roomId={this.state.roomId}\n                    messages={this.state.messages} />\n                <SendMessageForm\n                    disabled={!this.state.roomId}\n                    sendMessage={this.sendMessage} />\n                <NewRoomForm createRoom={this.createRoom} />\n            </div>\n        );\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}